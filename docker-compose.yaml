version: '2.3'
services:
  zookeeper:
    hostname: zookeeper
    image: wurstmeister/zookeeper:3.4.6
    expose:
      - "2181"
    ports:
      - "2181:2181"

  kafka:
    image: wurstmeister/kafka
    env_file:
      - kafka/kafka-variables.env
    depends_on:
      - zookeeper
    ports:
      - '9093:9092'
      - '8082:8082'
      - '8083:8083'

  mongo-db:
    image: mongo:4.0
    expose:
      - "27017"
    ports:
      - "27017:27017"
    environment:
      MONGO_DATA_DIR: /data/db
      MONGO_LOG_DIR: /dev/null

  db:
    image: postgres
    restart: always
    ports:
      - 5432:5432
    environment:
      POSTGRES_DB: example
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    healthcheck:
      test: "pg_isready -d $$POSTGRES_DB -U $$POSTGRES_USER"
      interval: 10s
      timeout: 5s
      retries: 5

  trip:
    build:
      context: "trip"
      dockerfile: "trip.Dockerfile"
    environment:
      kafkaURL: kafka:9092
      GroupID: logger-group
    depends_on:
      - kafka

  client:
    build:
      context: "client"
      dockerfile: "client.Dockerfile"
    environment:
      kafkaURL: kafka:9092
    depends_on:
      - kafka

  offering:
    build:
      context: "offering"
      dockerfile: "offering.Dockerfile"
    expose:
      - "8080"
    ports:
      - 8080:8080
    environment:
      kafkaURL: kafka:9092
      GroupID: logger-group
    depends_on:
      - kafka

  trip-sender-mock:
    build:
      context: trip-sender-mock
    environment:
      kafkaURL: kafka:9092
      topic: trip_listener
      huepic: topic2
    depends_on:
      - kafka